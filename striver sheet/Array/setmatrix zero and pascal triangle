 
 Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]


 algo:
 1.jo bhi row and col==0 then mark its row and col==0 by a[i][0]=0 and a[0][j]=0 except zero index and row  and col store its safely in another variable;
 2.after you have marked all move back and check which row and col=0 and based on that mark the value zro or not.
 
 void setZeroes(vector<vector<int>>& a) {
     int m=a[0].size();
        int n=a.size();int col0=1;
        for(int i=0;i<n;i++){
            if(a[i][0]==0)col0=0;
		for(int j=1;j<m;j++){
			if(a[i][j]==0){
				a[0][j]=0;
				a[i][0]=0;
			}
			else{
				continue;
			}
		}
	}
	for(int i=n-1;i>=0;i--){
		for(int j=m-1;j>=1;j--){
			if(a[i][0]==0 || a[0][j]==0){
                   a[i][j]=0;
				}			
		}
        if(col0==0){a[i][0]=0;}
	}
        
    }
    
    
  ::::::::::: PASCALS TRIANGLE:::::::::
    
    Input Format: N = 5

Result:
    1
   1 1
  1 2 1
 1 3 3 1
1 4 6 4 1

Explanation: There are 5 rows in the output matrix. Each row corresponds to each one of the rows in the image shown above.


algo:
1.  Create an array of size (i + 1) (For some languages such as C++, you need to create a 2D array at the start of the program and resize array[i] to (i + 1)).
2.  Set the first and last value of array[i] to 1.
3.  Run another loop from j = 1 to i – 1 (inclusive) and for each iteration put array[i][j] = array[i – 1][j – 1] + array[i – 1][j].





 vector<vector<int>> generate(int numRows) {
        vector<vector<int>> r(numRows);

        for (int i = 0; i < numRows; i++) {
            r[i].resize(i + 1);
            r[i][0] = r[i][i] = 1;
  
            for (int j = 1; j < i; j++)
                r[i][j] = r[i - 1][j - 1] + r[i - 1][j];
        }
        
        return r;
    }



